# Application name
spring.application.name=college-predictor

# Server configuration
# Port the application will run on (defaults to 8080 if PORT environment variable not set)
server.port=${PORT:8080}
# Bind to all network interfaces
server.address=0.0.0.0
# Enable graceful shutdown
server.shutdown=graceful

# Prevent NoResourceFoundException for missing static resources (Spring Boot 3.x)
# Disable default resource mapping since this is a REST API backend
spring.web.resources.add-mappings=false
# Don't throw exception when no handler is found for a request
spring.mvc.throw-exception-if-no-handler-found=true

# Database configuration
# MySQL database connection URL with SSL and timezone settings
spring.datasource.url=jdbc:mysql://mysql-13161f4b-sreemani0323-3de4.d.aivencloud.com:10573/defaultdb?useSSL=true&requireSSL=true&serverTimezone=UTC&socketTimeout=60000&allowPublicKeyRetrieval=true&autoReconnect=true
# Database username
spring.datasource.username=avnadmin
# Database password (injected from environment variable for security)
spring.datasource.password=${DB_PASSWORD}
# MySQL JDBC driver class
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# JPA configuration
# Don't auto-create/update database schema (use existing schema)
spring.jpa.hibernate.ddl-auto=none
# Don't show SQL statements in logs (for performance)
spring.jpa.show-sql=false
# Don't bind JPA entities to web requests (performance optimization)
spring.jpa.open-in-view=false
# Use MySQL dialect for Hibernate
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
# Format SQL statements for better readability in logs
spring.jpa.properties.hibernate.format_sql=true

# HikariCP connection pool configuration
# Maximum number of connections in the pool
spring.datasource.hikari.maximum-pool-size=5
# Minimum number of idle connections
spring.datasource.hikari.minimum-idle=2
# Maximum lifetime of a connection (5 minutes)
spring.datasource.hikari.max-lifetime=300000
# Keepalive time for connections (2 minutes)
spring.datasource.hikari.keepalive-time=120000
# Connection timeout (30 seconds)
spring.datasource.hikari.connection-timeout=30000
# Idle timeout (1 minute)
spring.datasource.hikari.idle-timeout=60000
# Query to test connection validity
spring.datasource.hikari.connection-test-query=SELECT 1
# Leak detection threshold (1 minute)
spring.datasource.hikari.leak-detection-threshold=60000

# Logging configuration
# Root logging level
logging.level.root=INFO
# Application-specific logging level
logging.level.com.Eamcet.predictor=INFO
# Web request logging level
logging.level.org.springframework.web=INFO
# Hibernate logging level (only warnings)
logging.level.org.hibernate=WARN
# Console log pattern
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n

# CORS configuration
# Allowed origins for Cross-Origin Resource Sharing
spring.web.cors.allowed-origins=https://sreemani0323.github.io,http://localhost:5500,http://127.0.0.1:5500
# Allowed HTTP methods
spring.web.cors.allowed-methods=GET,POST,OPTIONS
# Allowed headers
spring.web.cors.allowed-headers=*
# Don't allow credentials
spring.web.cors.allow-credentials=false
# Cache preflight requests for 1 hour
spring.web.cors.max-age=3600

# Actuator configuration for health checks
# Expose health and info endpoints
management.endpoints.web.exposure.include=health,info
# Show detailed health information only to authorized users
management.endpoint.health.show-details=when-authorized
# Enable database health checks
management.health.db.enabled=true

# Graceful shutdown
# Timeout for each shutdown phase (30 seconds)
spring.lifecycle.timeout-per-shutdown-phase=30s